{"version":3,"file":"index.js","sources":["../../electron/main/update.ts","../../electron/main/controllers/masters.controller.ts","../../electron/main/controllers/delivery.controller.ts","../../electron/main/index.ts"],"sourcesContent":["import { app, ipcMain } from 'electron'\nimport { createRequire } from 'node:module'\nimport type {\n  ProgressInfo,\n  UpdateDownloadedEvent,\n  UpdateInfo,\n} from 'electron-updater'\n\nconst { autoUpdater } = createRequire(import.meta.url)('electron-updater');\n\nexport function update(win: Electron.BrowserWindow) {\n\n  // When set to false, the update download will be triggered through the API\n  autoUpdater.autoDownload = false\n  autoUpdater.disableWebInstaller = false\n  autoUpdater.allowDowngrade = false\n\n  // start check\n  autoUpdater.on('checking-for-update', function () { })\n  // update available\n  autoUpdater.on('update-available', (arg: UpdateInfo) => {\n    win.webContents.send('update-can-available', { update: true, version: app.getVersion(), newVersion: arg?.version })\n  })\n  // update not available\n  autoUpdater.on('update-not-available', (arg: UpdateInfo) => {\n    win.webContents.send('update-can-available', { update: false, version: app.getVersion(), newVersion: arg?.version })\n  })\n\n  // Checking for updates\n  ipcMain.handle('check-update', async () => {\n    if (!app.isPackaged) {\n      const error = new Error('The update feature is only available after the package.')\n      return { message: error.message, error }\n    }\n\n    try {\n      return await autoUpdater.checkForUpdatesAndNotify()\n    } catch (error) {\n      return { message: 'Network error', error }\n    }\n  })\n\n  // Start downloading and feedback on progress\n  ipcMain.handle('start-download', (event: Electron.IpcMainInvokeEvent) => {\n    startDownload(\n      (error, progressInfo) => {\n        if (error) {\n          // feedback download error message\n          event.sender.send('update-error', { message: error.message, error })\n        } else {\n          // feedback update progress message\n          event.sender.send('download-progress', progressInfo)\n        }\n      },\n      () => {\n        // feedback update downloaded message\n        event.sender.send('update-downloaded')\n      }\n    )\n  })\n\n  // Install now\n  ipcMain.handle('quit-and-install', () => {\n    autoUpdater.quitAndInstall(false, true)\n  })\n}\n\nfunction startDownload(\n  callback: (error: Error | null, info: ProgressInfo | null) => void,\n  complete: (event: UpdateDownloadedEvent) => void,\n) {\n  autoUpdater.on('download-progress', (info: ProgressInfo) => callback(null, info))\n  autoUpdater.on('error', (error: Error) => callback(error, null))\n  autoUpdater.on('update-downloaded', complete)\n  autoUpdater.downloadUpdate()\n}\n","import { uniq } from 'lodash';\r\nimport { model, Schema } from 'mongoose';\r\n\r\nconst masterSchema = new Schema(\r\n\t{\r\n\t\tpincode: {\r\n\t\t\ttype: String,\r\n\t\t\tallownull: true,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\tfacility_id: {\r\n\t\t\ttype: String,\r\n\t\t\tunique: true,\r\n\t\t\trequired: true,\r\n\t\t},\r\n\t\tbooking_office: {\r\n\t\t\ttype: String,\r\n\t\t\tallownull: true,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\toffice_name: {\r\n\t\t\ttype: String,\r\n\t\t\tallownull: true,\r\n\t\t\trequired: false\r\n\t\t},\r\n\t\tdivision: {\r\n\t\t\ttype: String,\r\n\t\t\tallownull: true,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\tregion: {\r\n\t\t\ttype: String,\r\n\t\t\tallownull: true,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\td1: {\r\n\t\t\ttype: String,\r\n\t\t\tallownull: true,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\td2: {\r\n\t\t\ttype: String,\r\n\t\t\tallownull: true,\r\n\t\t\trequired: false,\r\n\t\t},\r\n\t\tis_deleted: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: false,\r\n\t\t\tallownull: false,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t\tis_active: {\r\n\t\t\ttype: Boolean,\r\n\t\t\tdefault: true,\r\n\t\t\tallownull: false,\r\n\t\t\trequired: true\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\ttimestamps: true,\r\n\t}\r\n);\r\n\r\n\r\nconst master = model('master', masterSchema);\r\n\r\nexport default master;","import { model, Schema } from 'mongoose';\r\n\r\nconst deliverySchema = new Schema(\r\n\t{\r\n\t\tarticle: {\r\n\t\t\ttype: String,\r\n\t\t\trequired: true,\r\n\t\t\tunique: true\r\n\t\t},\r\n\t\tbooking: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\ttrack: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tcod: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tbook_ofc: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tbook_ofc_name: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tdest_ofc_id: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tdest_ofc_name: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tbook_id: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tarticle_type: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tweight: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tbook_date: {\r\n\t\t\ttype: Date\r\n\t\t},\r\n\t\tbook_time: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\ttariff: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tprepaid_value: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tsender_name: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tsender_city: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tsender_mobile: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\treceiver_name: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\trecevier_addr1: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\trecevier_addr2: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\trecevier_addr3: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\treceiver_city: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\treceiver_phone: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\treceiver_pin: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tins_value: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tcustomer_id: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tcontract: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tvalue: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tservice: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\temo_message: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tuser_id: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tuser_name: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tstatus: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\toffice_id: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\toffice_name: {\r\n\t\t\ttype: String,\r\n\t\t},\r\n\t\tevent_date: {\r\n\t\t\ttype: Date,\r\n\t\t},\r\n\t\tevent_time: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tipvs_article_type: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\tbagid: {\r\n\t\t\ttype: String\r\n\t\t},\r\n\t\trts: {\r\n\t\t\ttype: String\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\ttimestamps: true,\r\n\t}\r\n);\r\n\r\ndeliverySchema.index({ article: 1 }, { unique: true });\r\nconst delivery = model('delivery', deliverySchema);\r\n\r\nexport default delivery;","import { app, BrowserWindow, shell, ipcMain } from 'electron'\r\nimport Mongoose from \"mongoose\";\r\nimport { createRequire } from 'node:module'\r\nimport { fileURLToPath } from 'node:url'\r\nimport path from 'node:path'\r\nimport { connect, set } from 'mongoose';\r\nimport os from 'node:os'\r\nimport { update } from './update'\r\n\r\nconst require = createRequire(import.meta.url)\r\nconst __dirname = path.dirname(fileURLToPath(import.meta.url))\r\nimport master from './controllers/masters.controller';\r\nimport delivery from './controllers/delivery.controller';\r\n\r\n// The built directory structure\r\n//\r\n// ├─┬ dist-electron\r\n// │ ├─┬ main\r\n// │ │ └── index.js    > Electron-Main\r\n// │ └─┬ preload\r\n// │   └── index.mjs   > Preload-Scripts\r\n// ├─┬ dist\r\n// │ └── index.html    > Electron-Renderer\r\n//\r\nprocess.env.APP_ROOT = path.join(__dirname, '../..')\r\n\r\nconsole.log(\"process process\")\r\nconsole.log(process.env.APP_ROOT)\r\n\r\n\r\nexport const MAIN_DIST = path.join(process.env.APP_ROOT, 'dist-electron')\r\nexport const RENDERER_DIST = path.join(process.env.APP_ROOT, 'dist')\r\nexport const VITE_DEV_SERVER_URL: any = process.env.VITE_DEV_SERVER_URL\r\n\r\nprocess.env.VITE_PUBLIC = VITE_DEV_SERVER_URL\r\n  ? path.join(process.env.APP_ROOT, 'public')\r\n  : RENDERER_DIST\r\n\r\n\r\n\r\n// Disable GPU Acceleration for Windows 7\r\nif (os.release().startsWith('6.1')) app.disableHardwareAcceleration()\r\n\r\n// Set application name for Windows 10+ notifications\r\nif (process.platform === 'win32') app.setAppUserModelId(app.getName())\r\n\r\nif (!app.requestSingleInstanceLock()) {\r\n  app.quit()\r\n  process.exit(0)\r\n}\r\n\r\nlet win: BrowserWindow | null = null\r\nconst preload = path.join(__dirname, '../preload/index.mjs')\r\nconst indexHtml = path.join(RENDERER_DIST, 'index.html')\r\nconsole.log(\"preload \", preload)\r\nconsole.log(\"indexHtml \", indexHtml)\r\nconsole.log(\"RENDERER_DIST \", RENDERER_DIST)\r\nconsole.log(\"VITE_DEV_SERVER_URL \", VITE_DEV_SERVER_URL)\r\nconsole.log(\"process.env.VITE_PUBLIC \", process.env.VITE_PUBLIC)\r\n\r\nasync function createWindow() {\r\n  win = new BrowserWindow({\r\n    title: 'Main window',\r\n    icon: path.join(process.env.VITE_PUBLIC, 'favicon.ico'),\r\n    webPreferences: {\r\n      preload,\r\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\r\n      // nodeIntegration: true,\r\n\r\n      // Consider using contextBridge.exposeInMainWorld\r\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\r\n      // contextIsolation: false,\r\n    },\r\n  })\r\n\r\n  if (VITE_DEV_SERVER_URL) { // #298\r\n    win.loadURL(VITE_DEV_SERVER_URL)\r\n    // Open devTool if the app is not packaged\r\n    win.webContents.openDevTools()\r\n  } else {\r\n    win.loadFile(indexHtml)\r\n  }\r\n\r\n    // win.loadURL(VITE_DEV_SERVER_URL)\r\n    // Open devTool if the app is not packaged\r\n    // win.webContents.openDevTools()\r\n\r\n  // win.loadFile(indexHtml)\r\n\r\n\r\n  // Test actively push message to the Electron-Renderer\r\n  win.webContents.on('did-finish-load', () => {\r\n    win?.webContents.send('main-process-message', new Date().toLocaleString())\r\n  })\r\n\r\n  // Make all links open with the browser, not with the application\r\n  win.webContents.setWindowOpenHandler(({ url }) => {\r\n    if (url.startsWith('https:')) shell.openExternal(url)\r\n    return { action: 'deny' }\r\n  })\r\n\r\n  // Auto update\r\n  update(win)\r\n}\r\n\r\napp.whenReady().then(createWindow).then(() => {\r\n  connect(`mongodb://localhost:27017`, {\r\n    // useNewUrlParser: true,\r\n    // useUnifiedTopology: true,\r\n  }).then(async (err) => {\r\n\r\n    console.log(\"download done\");\r\n\r\n    // const admin = await client.find({});\r\n    // console.log(\"admin\", admin);\r\n\r\n  })\r\n    .catch((err) => {\r\n      console.log(\"Error in db connection\", err)\r\n    })\r\n\r\n})\r\n\r\napp.on('window-all-closed', () => {\r\n  win = null\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\napp.on('second-instance', () => {\r\n  if (win) {\r\n    // Focus on the main window if the user tried to open another\r\n    if (win.isMinimized()) win.restore()\r\n    win.focus()\r\n  }\r\n})\r\n\r\napp.on('activate', () => {\r\n  const allWindows = BrowserWindow.getAllWindows()\r\n  if (allWindows.length) {\r\n    allWindows[0].focus()\r\n  } else {\r\n    createWindow()\r\n  }\r\n})\r\n\r\n// New window example arg: new windows url\r\nipcMain.handle('open-win', (_, arg) => {\r\n  const childWindow = new BrowserWindow({\r\n    webPreferences: {\r\n      preload,\r\n      nodeIntegration: true,\r\n      contextIsolation: false,\r\n    },\r\n  })\r\n\r\n  if (VITE_DEV_SERVER_URL) {\r\n    childWindow.loadURL(`${VITE_DEV_SERVER_URL}#${arg}`)\r\n  } else {\r\n    childWindow.loadFile(indexHtml, { hash: arg })\r\n  }\r\n})\r\n\r\n\r\nipcMain.on('login', async (event, payload) => {\r\n\r\n  try {\r\n    const docs = await master.insertMany(payload, { ordered: false });\r\n    // console.log('Bulk insert successful:', docs);\r\n    event.reply('login-success', JSON.stringify({ status: true, data: docs }));\r\n  } catch (err) {\r\n    // console.log('Error during bulk insert:', err);\r\n    event.reply('login-error', JSON.stringify({ status: false, data: err }));\r\n  }\r\n\r\n});\r\n\r\nipcMain.on('deliveryAdd', async (event, payload) => {\r\n\r\n  try {\r\n\r\n    console.log(\"addding delivery data+++++++++++++++++=======\")\r\n    const docs = await delivery.insertMany(payload, { ordered: false });\r\n    // console.log('Bulk insert successful:', docs);\r\n    event.reply('delivery-add-success', JSON.stringify({ status: true, data: docs }));\r\n  } catch (err) {\r\n    // console.log('Error during bulk insert:', err);\r\n    event.reply('delivery-add-error', JSON.stringify({ status: false, data: err }));\r\n  }\r\n\r\n});\r\n\r\nipcMain.on('getMasterData', async (event, filter) => {\r\n\r\n  console.log(\"get master data called\");\r\n  console.log(filter);\r\n\r\n  // let cond = { company: Mongoose.Types.ObjectId(filter.company) }\r\n  let cond = {};\r\n  let search = null;\r\n  if (filter.search !== null) {\r\n    search = filter.search;\r\n  }\r\n\r\n  if (search) {\r\n    Object.assign(cond, {\r\n      $or: [\r\n        {\r\n          facility_id: {\r\n            $regex: '.*' + search + '.*', $options: 'si'\r\n          }\r\n        },\r\n      ]\r\n    })\r\n  }\r\n\r\n  let sort: any = filter.sort ? filter.sort : { createdAt: -1 };\r\n\r\n  let limit = parseInt(filter.limit) || 10;\r\n  let skip = (parseInt(filter.page) - 1) * limit || 0;\r\n\r\n  const allItems: any = await master.aggregate([\r\n    // {\r\n    //   $match: cond\r\n    // },\r\n    {\r\n      $sort: sort\r\n    },\r\n    {\r\n      $project: {\r\n        pincode: 1,\r\n        facility_id: 1,\r\n        booking_office: 1,\r\n        office_name: 1,\r\n        division: 1,\r\n        region: 1,\r\n        d1: 1,\r\n        d2: 1,\r\n        _id: 1,\r\n        is_deleted: 1,\r\n        is_active: 1,\r\n        createdAt: 1,\r\n        updatedAt: 1,\r\n      }\r\n    },\r\n    {\r\n      $facet: {\r\n        total: [{ $count: 'createdAt' }],\r\n        data: [{\r\n          $addFields: { _id: '$_id', }\r\n        }],\r\n      },\r\n    },\r\n    {\r\n      $unwind: '$total'\r\n    },\r\n    {\r\n      $project: {\r\n        data: {\r\n          $slice: ['$data', skip, {\r\n            $ifNull: [limit, '$total.createdAt']\r\n          }]\r\n        },\r\n        meta: {\r\n          total: '$total.createdAt',\r\n          limit: {\r\n            $literal: limit\r\n          },\r\n          page: {\r\n            $literal: ((skip / limit) + 1)\r\n          },\r\n          pages: {\r\n            $ceil: {\r\n              $divide: ['$total.createdAt', limit]\r\n            }\r\n          },\r\n        },\r\n      },\r\n    },\r\n  ]);\r\n\r\n\r\n\r\n  // console.log(\"allItems i got\");\r\n  // console.log(allItems);\r\n  let holdVal = [];\r\n  if (allItems && allItems.length) {\r\n    holdVal = allItems[0];\r\n  } else {\r\n    holdVal = [];\r\n  }\r\n\r\n  event.reply('get-master-success', JSON.stringify({ status: true, data: holdVal }));\r\n\r\n  // try {\r\n  //   const docs = await master.insertMany(payload, { ordered: false });\r\n  //   // console.log('Bulk insert successful:', docs);\r\n  //   event.reply('login-success', JSON.stringify({ status: true, data: docs }));\r\n  // } catch (err) {\r\n  //   // console.log('Error during bulk insert:', err);\r\n  //   event.reply('login-error', JSON.stringify({ status: false, data: err }));\r\n  // }\r\n\r\n});\r\n\r\nipcMain.on('delete', async (event, filter) => {\r\n  console.log('delete function is calling+++++++++======', filter)\r\n  const result = await delivery.deleteMany(filter.ids);\r\n\r\n  event.reply('delete-response', JSON.stringify({ status: true, data: {} }));\r\n\r\n\r\n\r\n});\r\n\r\nipcMain.on('update', async (event, filter) => {\r\n\r\n  console.log('update function is calling++++++++=======', filter)\r\n  const result = await delivery.updateMany(filter.cond, filter.updateData);\r\n\r\n  event.reply('update-response', JSON.stringify({ status: true, data: {} }));\r\n\r\n\r\n\r\n\r\n});\r\n\r\nipcMain.on('getDeliveryData', async (event, filter) => {\r\n\r\n  console.log(\"get delivery data called\");\r\n  console.log(filter);\r\n\r\n  // let cond = { company: Mongoose.Types.ObjectId(filter.company) }\r\n  // let cond = {};\r\n\r\n  let search = null;\r\n  let sort: any = filter.sort ? filter.sort : { createdAt: -1 };\r\n\r\n\r\n  // switch (filter.sortKey) {\r\n\r\n  //   case \"book_ofc\":\r\n  //     sort = { \"book_ofc\": filter.sortType === \"ASC\" ? 1 : -1 }\r\n  //     break;\r\n\r\n  //   case \"event_date\":\r\n  //     sort = { \"event_date\": filter.sortType === \"ASC\" ? 1 : -1 }\r\n  //     break;\r\n\r\n  //   case \"status\":\r\n  //     sort = { \"status\": filter.sortType === \"ASC\" ? 1 : -1 }\r\n  //     break;\r\n\r\n  //   default:\r\n  //     break;\r\n\r\n  // }\r\n\r\n  let cond: any = {}\r\n\r\n  if (filter.startDate && filter.endDate) {\r\n    Object.assign(cond, {\r\n      $and: [\r\n        {\r\n          \"event_date\": { $gte: new Date(filter.startDate) },\r\n        },\r\n        {\r\n          \"event_date\": { $lte: new Date(filter.endDate) },\r\n        },\r\n      ]\r\n    })\r\n  }\r\n\r\n  if (filter.status !== null) {\r\n    Object.assign(cond, { status: filter['status'] })\r\n  }\r\n\r\n\r\n  if (filter.search) {\r\n    Object.assign(cond, {\r\n      $or: [\r\n        {\r\n          article: {\r\n            $regex: '.*' + filter.search + '.*', $options: 'si'\r\n          }\r\n        },\r\n        {\r\n          book_ofc_name: {\r\n            $regex: '.*' + filter.search + '.*', $options: 'si'\r\n          }\r\n        },\r\n      ]\r\n    });\r\n  }\r\n\r\n\r\n\r\n  let limit = parseInt(filter.limit) || 10;\r\n  let skip = (parseInt(filter.page) - 1) * limit || 0;\r\n\r\n  const allItems: any = await delivery.aggregate([\r\n    {\r\n      $match: cond\r\n    },\r\n    {\r\n      $sort: sort\r\n    },\r\n    {\r\n      $project: {\r\n        article: 1,\r\n        booking: 1,\r\n        track: 1,\r\n        cod: 1,\r\n        book_ofc: 1,\r\n        book_ofc_name: 1,\r\n        dest_ofc_id: 1,\r\n        dest_ofc_name: 1,\r\n        book_id: 1,\r\n        article_type: 1,\r\n        weight: 1,\r\n        book_date: 1,\r\n        book_time: 1,\r\n        tariff: 1,\r\n        prepaid_value: 1,\r\n        sender_name: 1,\r\n        sender_city: 1,\r\n        sender_mobile: 1,\r\n        receiver_name: 1,\r\n        recevier_addr1: 1,\r\n        recevier_addr2: 1,\r\n        recevier_addr3: 1,\r\n        receiver_city: 1,\r\n        receiver_phone: 1,\r\n        receiver_pin: 1,\r\n        ins_value: 1,\r\n        customer_id: 1,\r\n        contract: 1,\r\n        value: 1,\r\n        service: 1,\r\n        emo_message: 1,\r\n        user_id: 1,\r\n        user_name: 1,\r\n        status: 1,\r\n        office_id: 1,\r\n        office_name: 1,\r\n        event_date: 1,\r\n        event_time: 1,\r\n        ipvs_article_type: 1,\r\n        bagid: 1,\r\n        rts: 1,\r\n        _id: 1,\r\n        is_deleted: 1,\r\n        is_active: 1,\r\n        createdAt: 1,\r\n        updatedAt: 1,\r\n      }\r\n    },\r\n    {\r\n      $facet: {\r\n        total: [{ $count: 'createdAt' }],\r\n        data: [{\r\n          $addFields: { _id: '$_id', }\r\n        }],\r\n      },\r\n    },\r\n    {\r\n      $unwind: '$total'\r\n    },\r\n    {\r\n      $project: {\r\n        data: {\r\n          $slice: ['$data', skip, {\r\n            $ifNull: [limit, '$total.createdAt']\r\n          }]\r\n        },\r\n        meta: {\r\n          total: '$total.createdAt',\r\n          limit: {\r\n            $literal: limit\r\n          },\r\n          page: {\r\n            $literal: ((skip / limit) + 1)\r\n          },\r\n          pages: {\r\n            $ceil: {\r\n              $divide: ['$total.createdAt', limit]\r\n            }\r\n          },\r\n        },\r\n      },\r\n    },\r\n  ]);\r\n\r\n  // console.log(\"this is all items+++++++++=\", allItems[0]);\r\n\r\n  let holdVal = [];\r\n  if (allItems && allItems?.length) {\r\n    const bookOfcIds = allItems[0].data.map((item: any) => item.book_ofc).filter(Boolean);\r\n    const uniqueBookOfcIds = [...new Set(bookOfcIds)];\r\n    const masterData = await master.find({ facility_id: { $in: uniqueBookOfcIds } })\r\n\r\n\r\n    const mergedData = allItems[0].data.map((delivery: any) => {\r\n      const matchingMaster = masterData.find(master => master.facility_id === delivery.book_ofc);\r\n      return {\r\n        ...delivery, // Plain object, no need for toObject()\r\n        masterData: matchingMaster || null, // Add master data or null if not found\r\n      };\r\n    });\r\n\r\n\r\n    if (allItems && allItems.length) {\r\n      allItems[0][\"data\"] = mergedData\r\n      holdVal = allItems[0];\r\n    } else {\r\n      holdVal = [];\r\n    }\r\n\r\n  } else {\r\n    holdVal = [];\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // return {\r\n  //   data: mergedData,\r\n  //   meta: { total: 1680, limit: 10, page: 1, pages: 168 }, // Adjust meta values dynamically\r\n  // };\r\n\r\n  event.reply('get-delivery-success', JSON.stringify({ status: true, data: holdVal }));\r\n\r\n  // try {\r\n  //   const docs = await master.insertMany(payload, { ordered: false });\r\n  //   // console.log('Bulk insert successful:', docs);\r\n  //   event.reply('get-delivery-success', JSON.stringify({ status: true, data: docs }));\r\n  // } catch (err) {\r\n  //   // console.log('Error during bulk insert:', err);\r\n  //   event.reply('get-delivery-error', JSON.stringify({ status: false, data: err }));\r\n  // }\r\n\r\n\r\n\r\n});"],"names":["win","delivery","master"],"mappings":"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"}